gyatt skui

-- Constants
WIDTH is 800
HEIGHT is 600
FPS is 60
FPS is 60

BG_COLOR is "#000000"
FG_COLOR is "#FFFFFF"
BULLET_COLOR is "#000000"

-- Variables
running is sigma

-- Sprites
bullets is []
zombies is []

playerSpr is 0

pookie Bullet()
    cookable __init__(x, y, target)
        self.x is x
        self.y is y
        self.target is target
        self.speed is 10

        -- Calculate direction and velocity
        dx is target[0] - self.x
        dy is target[1] - self.y
        distance is skui.hypot(dx, dy)

        self.velocity_x is dx / distance * self.speed
        self.velocity_y is dy / distance * self.speed
    slay

    cookable update()
        -- Move the bullet
        self.x += self.velocity[0]
        self.y += self.velocity[1]

        -- Draw bullet
        skui.drawImage("bullet.png", self.x, self.y, 0)

        -- Remove bullet if it goes out of bounds
        cook if self.x > WIDTH or self.x < 0 or self.y > HEIGHT or self.y < 0
            bullets.remove(self)
        slay

        -- Go through all zombies and see if colliding
    slay
slay

pookie Zombie()
    cookable __init__(x, y)
        self.x is x
        self.y is y
        self.speed is 10
    slay
   
    cookable update()
        -- skui.drawImage("zombie.png", self.x, self.y, 0)
    slay
slay

-- Start game
cookable mew()
    -- Create window
    skui.createWindow(WINDOW_WIDTH, WINDOW_HEIGHT, "Skibidi Game")
    
    zombies.add(new Zombie(50, 50))

    skibidi(sigma) do
        status is cook skui.pumpEvents()

        skui.clockTick(FPS)

        -- bg color
        cook skui.goonScreen(skui.colors.DARK)
    
        -- Draw player
        playerSpr.draw()
    
        for (bullet in bullets) do
            bullet.update()
        slay
    
        for (zombies in zombies) do
            zombies.update()
        slay
    
        playerSpr.update()
    
        -- Finally refresh the thing
        
        cook skui.renderIn4k()
        cook skui.clockEdge()
    slay
slay
