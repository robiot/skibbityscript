{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Shelf",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#paren-expression"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.shelf",
          "match": "\\b(if|else|while|for|inc)\\b"
        },
        {
          "name": "keyword.other.shelf",
          "match": "\\b(?i)(ABS|ACOS|ADD_MONTHS|APPROXIMATE|PERCENTILE_DISC|ASIN|ATAN|ATAN2|AVG|BIT_AND|BIT_OR|BIT-WISE|BOOL_AND|BOOL_OR|BPCHARCMP|BTRIM|BTTEXT_PATTERN_CMP|CASE|CAST|CBRT|CEIL|CEILING|CHAR_LENGHT|CHARACTER_LENGTH|CHARINDEX|CHECKSUM|CHR|COALESCE|CONCAT|CONVERT|CONVERT_TIMEZONE|COS|COT|COUNT|CRC32|CUME_DIST|CURRENT_DATABASE|CURRENT_DATE|CURRENT_SCHEMA|CURRENT_SCHEMAS|CURRENT_SETTING|CURRENT_USER|CURRENT_USER_ID|DATE_CMP|DATE_CMP_TIMESTAMP|DATE_CMP_TIMESTAMPZ|DATE_PART|DATE_PART_YEAR|DATE_TRUNC|DATEADD|DATEDIFF|DECODE|DEGREES|DENSE_RANK|DEXP|DISTKEY|DISTSTYLE|DISTINCT|DLOG1|DLOG10|EXP|EXTRACT|FIRST_VALUE|FLOOR|FUNC_SHA1|GETDATE|GREATEST|HAS_DATABASE_PRIVILEGE|HAS_SCHEMA_PRIVILEGE|HAS_TABLE_PRIVILEGE|INITCAP|INTERVAL_CMP|IS_VALID_JSON|IS_VALID_JSON_ARRAYT|JSON_ARRAY_LENGHT|JSON_EXTRACT_ARRAY_ELEMENT_TEXT|JSON_EXTRACT_PATH_TEXT|LAG|LAST_DAY|LAST_VALUUE|LEAD|LEAST|LEFT|LEN|LENGTH|LISTAGG|LN|LOG|LOWER|LPAD|LTRIM|MAX|MD5|MEDIAN|MIN|MOD|MONTHS_BETWEEN|NEXT_DAY|NTH_VALUE|NTILE|NULLIF|NVL|NVL2|OCTET_LENGHT|PERCENT_RANK|PERCENTILE_CONT|PERCENTILE_DISC|PG_BACKEND_PID|PG_CANCEL_BACKEND|PG_GET_COLS|PG_GET_LATE_BINDING_VIEW_COLS|PG_LAST_COPY_COUNT|PG_LAST_COPY_ID|PG_LAST_QUERY_ID|PG_LAST_UNLOAD_COUNT|PG_LAST_UNLOAD_ID|PG_TERMINATE_BACKEND|PI|POSISTION|POWER|QUOTE_IDENT|QUOTE_LITERAL|RADIANS|RANDOM|RANK|RATIO_TO_REPORT|REGEXP_COUNT|REGEXP_INSTR|REGEXP_REPLACE|REGEXP_SUBSTR|REPEAT|REPLACE|REPLICATE|REVERSE|RIGHT|ROUND|ROW_NUMBER|RPAD|RTRIM|SESSION_USER|SET_CONFIG|SIGN|SIN|SLICE_NUM|SORTKEY|SPLIT_PART|SQRT|STDDEV|STDDEV_POP|STDDEV_SAMP|STRPOS|STRTOL|SUBSTRING|SUM|SYSDATE|TAN|TEXTLEN|TIMEOFDAY|TIMESTAMP_CMP|TIMESTAMP_CMP_DATE|TIMESTAMP_CMP_TIMESTAMPZ|TIMESTAMPZ_CMP|TIMESTAMPZ_CMP_DATE|TIMESTAMPZ_CMP_TIMESTAMP|TIMEZONE|TO_CHAR|TO_DATE|TO_HEX|TO_NUMBER|TO_TIMESTAMP|TRANSLATE|TRIM|TRUNC|UPPER|USER|VAR_POP|VAR_SAMP|VARIANCE|VERSION)\\b"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-dash.shelf",
          "begin": "//",
          "end": "\n"
        },
        {
          "name": "comment.block.shelf",
          "begin": "/[*]",
          "end": "[*](/)"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.single.shelf",
          "begin": "'",
          "end": "'"
        },
        {
          "name": "string.quoted.double.shelf",
          "begin": "\"",
          "end": "\""
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.language",
          "match": "\\b(define|set)\\b"
        },
        {
          "name": "entity.name.function.member.shelf",
          "match": "\\b(say|readline)\\b"
        },
        {
          "name": "constant.numeric",
          "match": "[0-9]"
        }
      ]
    },
    "paren-expression": {
      "patterns": [
        {
          "captures": {
            "1": {
              "name": "entity.name.function.shelf"
            }
          },
          "match": "\\b(\\w+)(?:\\s+([-a-zA-Z0-0_]+))?\\s*(\\()",
          "name": "punctuation.definition.parameters.shelf"
        }
      ]
    }
  },
  "scopeName": "source.shf"
}
